#!/bin/sh

# Exit on any error
set -e

# Determine the home directory
HOME_DIR="/home/appuser"

# Setup Codex configuration (TOML) for a local custom server
# - Honors existing config (won't overwrite)
# - Creates two providers:
#     1) local-responses  -> appends /responses
#     2) local-chat       -> appends /chat/completions
# - Adds matching profiles to easily switch providers

# Determine Codex home (default to ~/.codex under our HOME_DIR)
CODEX_HOME="${CODEX_HOME:-${HOME_DIR}/.codex}"
CONFIG_FILE="${CODEX_HOME}/config.toml"

# Ensure directory exists
mkdir -p "${CODEX_HOME}"

if [ -f "${CONFIG_FILE}" ]; then
  echo "⚠️  Codex configuration already exists at ${CONFIG_FILE}"
  echo "🛑 SKIPPING CREATION TO PRESERVE EXISTING CONFIGURATION 🛑"
else
  # Base URL for your custom server; can be overridden via env
  BASE_URL="${CODEX_BASE_URL:-${CUSTOM_SERVER_BASE_URL:-http://localhost:8000}}"

  # Defaults (can be overridden via env)
  DEFAULT_PROVIDER="${CODEX_DEFAULT_PROVIDER:-local-responses}"
  DEFAULT_MODEL="${CODEX_DEFAULT_MODEL:-gpt-5}"

  echo "Creating Codex configuration at ${CONFIG_FILE}"
  cat > "${CONFIG_FILE}" <<EOF
# Generated by setup-codex.sh
# Edit as needed; script will not overwrite once created.

# Root defaults
model = "${DEFAULT_MODEL}"
model_provider = "${DEFAULT_PROVIDER}"

# Custom local providers
[model_providers.local-responses]
name = "Local Responses API"
base_url = "http://localhost:8000"
wire_api = "responses"

EOF
  echo "✅ Codex configuration created at ${CONFIG_FILE}"
fi
